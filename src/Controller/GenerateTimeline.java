package Controller;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import Model.Database;
import Model.Post;
import Model.User;
import View.Alert;

public class GenerateTimeline {
//class responsible for generating a time line of posts
	private ArrayList<Post> posts;
	//list of posts that will be populated with posts made by the user's friends
	
	
	public GenerateTimeline(User user, Database database) {
		//post list is initialized to store the retrieved posts
		posts = new ArrayList<>();
		
		//SQL query to retrieve the posts made by the user's friends and populates the posts list with the retrieved data
		//also checks if user has friends by iterating
		StringBuilder sb = new StringBuilder(); 
		if (user.getFriendsIDs().size()!=0) {
			for (int i=0;i<user.getFriendsIDs().size();i++) {
				sb.append("`User` = "+user.getFriendsIDs().get(i));
				if (i!=user.getFriendsIDs().size()-1) {
					sb.append(" OR ");
				} else {
					sb.append(";"); 
				}
			}
			String select = "SELECT * FROM `posts` WHERE "+sb.toString();
			try {
				ResultSet rs = database.getStatement().executeQuery(select);
				ArrayList<Integer> usersIDs = new ArrayList<Integer>();
				while (rs.next()) {
					Post p = new Post();
					p.setID(rs.getInt("ID"));
					p.setContent(rs.getString("Content"));
					usersIDs.add(rs.getInt("user"));
					p.setDateTimeFromString(rs.getString("DateTime"));
					posts.add(p);
				}
				for (int i=0;i<usersIDs.size();i++) {
					posts.get(i).setUser(new ReadUserByID(usersIDs.get(i), database)
							.getUser());
				}
			} catch (SQLException e) {
				new Alert(e.getMessage(), null);
			}
		}
		
	}
	
	
	//returns the list of posts generated by the constructor
	public ArrayList<Post> getPosts() {
		return posts;
	}
	
	
}
